{"version":3,"sources":["components/HeaderBar.js","components/FooterBar.js","components/Display.js","components/Button.js","api/database.js","helpers/key.js","components/Result.js","components/SelectSize.js","actions/index.js","components/Pixel.js","components/SelectColor.js","components/Canva.js","components/ShareArt.js","components/CreateArt.js","components/App.js","reducers/index.js","index.js"],"names":["HeaderBar","showPopUp","className","FooterBar","href","target","rel","style","fontSize","Display","this","fillCanva","ctx","document","getElementById","getContext","props","pixels","forEach","pixel","fillStyle","color","startPointY","parseInt","key","substring","startPointX","fillRect","id","width","height","React","Component","Button","onClick","onButtonClick","text","baseURL","sendArt","a","axios","post","response","checkIfPaid","get","data","isPaid","getArt","createWhiteBoard","whiteBoard","i","indexToKey","push","createGivenBoard","board","length","index","maxWidth","Math","floor","createKey","indexOfPixel","pixelId","Result","state","componentDidMount","match","params","setState","SelectSize","onHeightChange","event","value","onWidthChange","onSizeChange","preventDefault","selectSize","onSubmit","htmlFor","type","name","min","max","onChange","connect","size","payload","Pixel","onPixelClick","pixelRef","createRef","current","addEventListener","ref","SelectColor","colorsToSelect","onSelectColor","selectColor","backgroundColor","map","selectedColor","allColorToSelect","Canva","createCanva","onChangeColor","newPixels","setPixels","findIndex","element","gridTemplateColumns","ShareArt","saveToDatabase","pixelsToSend","_id","checking","setInterval","res","console","log","clearInterval","copyId","idAreaRef","select","execCommand","openPortal","window","open","focus","src","title","border","overflow","scrolling","frameBorder","allow","readOnly","facebookAvailable","textDisplay","whatToDisplay","CreateArt","result","onResult","content","App","path","component","combineReducers","action","store","createStore","reducers","ReactDOM","render"],"mappings":"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","file":"static/js/main.6285d96a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport '../styles/headerBar.css'\r\n\r\nconst HeaderBar = ({ showPopUp }) => {\r\n    return (\r\n        <div className='solid-border header-bar'>\r\n            <h1>\r\n                PIXELART DLA SANDRY\r\n            </h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderBar;","import React from 'react';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nimport '../styles/footer.css';\r\n\r\nconst FooterBar = () => {\r\n    return (\r\n        <div className=\"footer solid-border\">\r\n            <div className=\"flex\">\r\n                <div className=\"footer-text\">\r\n                    Copyright © Magdalena Szade\r\n                </div>\r\n                <a href=\"https://github.com/MagdaSzade\" target='_blank' rel=\"noopener noreferrer\">\r\n                    <GitHubIcon style={{fontSize: '1rem'}}/>    \r\n                </a>\r\n                <a href=\"https://www.linkedin.com/in/magdalena-szade/\" target='_blank' rel=\"noopener noreferrer\">\r\n                    <LinkedInIcon style={{fontSize: '1rem'}}/>    \r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FooterBar;","import React from 'react';\r\n\r\nclass Display extends React.Component {\r\n    componentDidMount() {\r\n        this.fillCanva();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.fillCanva();\r\n    }\r\n\r\n    fillCanva() {\r\n        const canvas = document.getElementById(\"myCanvas\");\r\n        const ctx = canvas.getContext(\"2d\");\r\n        this.props.pixels.forEach((pixel) => {\r\n            ctx.fillStyle =  pixel.color;\r\n            const startPointY = parseInt(pixel.key.substring(0, 2)) * 10;\r\n            const startPointX = parseInt(pixel.key.substring(2)) * 10;\r\n            ctx.fillRect(startPointX, startPointY, 10, 10);\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <canvas className=\"solid-border\" id=\"myCanvas\" width={this.props.width*10} height={this.props.height*10}></canvas>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Display;","import React from 'react';\r\n\r\nimport '../styles/button.css';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button className='button thin-border' onClick={props.onButtonClick}>{props.text}</button>\r\n    )\r\n}\r\n\r\nexport default Button;","  \r\nimport axios from 'axios';\r\n\r\nexport const baseURL = 'http://localhost:9090/api/art';\r\nexport const BaseURLFacebook = 'http://localhost:9090.com';\r\n\r\nexport const sendArt = async (pixels, width) => {\r\n    const response = await axios.post(`${baseURL}/saveArt`, {\r\n        pixels,\r\n        width\r\n    });\r\n    return response;\r\n};\r\n\r\nexport const checkIfPaid = async (id) => {\r\n    const response = await axios.get(`${baseURL}/isPaid/${id}`);\r\n    return response.data.isPaid;\r\n}\r\n\r\nexport const getArt = async (id) => {\r\n    const response = await axios.get(`${baseURL}/find/${id}`)\r\n    return response.data;\r\n}\r\n","\r\n\r\nexport const createWhiteBoard = (height, width) => {\r\n    let whiteBoard = [];\r\n    for (let i = 0; i < height * width; i++) {\r\n        const key = indexToKey(i, width);\r\n        const pixel = { color: 'white', key: key };\r\n        whiteBoard.push(pixel);\r\n    }\r\n    return whiteBoard;\r\n}\r\n\r\nexport const createGivenBoard =  (pixels, width) => {\r\n    let board = [];\r\n    for (let i = 0; i < pixels.length; i++) {\r\n        const key = indexToKey(i, width);\r\n        const pixel = { color: pixels[i], key: key };\r\n        board.push(pixel);\r\n    }\r\n    return board;\r\n}\r\n\r\nexport const indexToKey = (index, maxWidth) => {\r\n    const width = (index)%maxWidth;\r\n    const height = Math.floor(index/maxWidth);\r\n    const key = createKey(height, width);\r\n    return key;\r\n}\r\n\r\nexport const createKey = (height, width) => {\r\n    let key = \"\";\r\n    if (height < 10) {\r\n        key += \"0\" + height;\r\n    } else {\r\n        key += height;\r\n    }\r\n    if (width < 10) {\r\n        key += \"0\" + width;\r\n    } else {\r\n        key += width;\r\n    }\r\n    return key;\r\n}\r\n\r\nexport const indexOfPixel = (pixelId, maxWidth) => {\r\n    const height = parseInt(pixelId.substring(0, 2));\r\n    const width = parseInt(pixelId.substring(2));\r\n    const index = height * maxWidth + width;\r\n    return index;\r\n}","import React from 'react';\r\n\r\nimport Display from './Display';\r\nimport Button from './Button';\r\nimport { getArt } from '../api/database';\r\nimport { createGivenBoard } from '../helpers/key';\r\n\r\nclass Result extends React.Component {\r\n    state = {\r\n        pixels: [],\r\n        width: null,\r\n        height: null,\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const response = await getArt(this.props.match.params.id);\r\n        const board = createGivenBoard(response.pixels, response.width);\r\n        const height = response.pixels.length/response.width;\r\n        this.setState({ pixels: board, width: response.width, height: height });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <p>Zobacz mój pixel art!</p>\r\n                </div>\r\n                <Display \r\n                    pixels={this.state.pixels}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                />\r\n                <div>\r\n                    <p>Spróbuj narysować coś swojego.</p>\r\n                    <a href=\"/\">\r\n                        <Button text=\"Narysuj\"/>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Result;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectSize } from '../actions';\r\n\r\nimport '../styles/selectSize.css'\r\n\r\nclass SelectSize extends React.Component {\r\n    state = {\r\n        height: this.props.height,\r\n        width: this.props.width\r\n    }\r\n\r\n    onHeightChange = event => {\r\n        this.setState({height: parseInt(event.target.value)});\r\n    };\r\n\r\n    \r\n    onWidthChange = event => {\r\n        this.setState({width: parseInt(event.target.value)});\r\n    };\r\n\r\n    onSizeChange = event => {\r\n        event.preventDefault();\r\n        this.props.selectSize(this.state.width, this.state.height);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"select-size\">\r\n                <form onSubmit={this.onSizeChange}>\r\n                    <div className=\"grid inputs\">\r\n                        <label htmlFor=\"height\">Wysokość</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"height\"\r\n                            name=\"height\"\r\n                            min=\"5\"\r\n                            max=\"15\"\r\n                            value={this.state.height}\r\n                            onChange={this.onHeightChange}\r\n                        />\r\n                        <label htmlFor=\"width\">Szerokość</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"width\"\r\n                            name=\"width\"\r\n                            min=\"5\"\r\n                            max=\"15\"\r\n                            value={this.state.width}\r\n                            onChange={this.onWidthChange}\r\n                        />\r\n                    </div>\r\n                    <input \r\n                        type=\"submit\"\r\n                        value=\"zmień\" \r\n                        className='button thin-border' >\r\n                    </input>\r\n                    \r\n                </form>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = props => {\r\n    return {\r\n        width: props.size.width,\r\n        height: props.size.height\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectSize })(SelectSize);  ","export const selectColor = (color) => {\r\n    return {\r\n        type: \"SELECTED_COLOR\",\r\n        payload: color\r\n    }\r\n}\r\n\r\nexport const selectSize = (width, height) => {\r\n    const payload = {\r\n        width: width, \r\n        height: height, \r\n    }\r\n    return {\r\n        type: \"SELECT_SIZE\",\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const setPixels = (pixels) => {\r\n    return {\r\n        type: \"PIXELS\",\r\n        payload: pixels\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport \"../styles/pixel.css\";\r\n\r\nclass Pixel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.pixelRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.pixelRef.current.addEventListener('click', this.onClick);\r\n    }\r\n\r\n    onClick = () => {\r\n        this.props.onPixelClick(this.pixelRef);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div \r\n                ref={this.pixelRef}\r\n                className=\"pixel thin-border\" \r\n                id=  {this.props.id} \r\n                style={this.props.style}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pixel;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Pixel from './Pixel';\r\nimport { selectColor } from '../actions';\r\n\r\nimport \"../styles/selectColor.css\";\r\n\r\n\r\nclass SelectColor extends React.Component {\r\n    colorsToSelect = [\"red\", \"green\", \"yellow\", \"black\", \"blue\", \"purple\", \"orange\", \"white\"]\r\n\r\n    onSelectColor = (pixelRef) => {\r\n        this.props.selectColor(pixelRef.current.style.backgroundColor);\r\n    }\r\n\r\n    allColorToSelect() {\r\n        return (\r\n            this.colorsToSelect.map(color => {\r\n                return (\r\n                    <Pixel \r\n                        style={{backgroundColor: color}} \r\n                        key={color}\r\n                        onPixelClick={this.onSelectColor}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"select-color grid\">\r\n                <div className=\"selected-color flex\">\r\n                    <div className=\"selected-color-text\">Wybrany kolor</div>\r\n                    <Pixel style={{backgroundColor: this.props.selectedColor}}/>\r\n                </div>\r\n                <div className=\"colors-to-select flex\">\r\n                    {this.allColorToSelect()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedColor: state.selectedColor\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectColor })(SelectColor);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Pixel from './Pixel';\r\nimport { setPixels } from '../actions';\r\n\r\nimport { indexOfPixel, createWhiteBoard } from '../helpers/key';\r\n\r\nimport '../styles/canva.css'\r\n\r\nclass Canva extends React.Component {\r\n    state = {\r\n        width: 0,\r\n        height: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ width: this.props.width, height: this.props.height });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.width !== this.state.width || this.props.height !== this.state.height) {\r\n            const newPixels = createWhiteBoard(this.props.height, this.props.width);\r\n            newPixels.forEach(pixel => {\r\n                const index = this.props.pixels.findIndex((element) => { return element.key === pixel.key});\r\n                if ( index !== -1 ) {\r\n                    pixel.color = this.props.pixels[index].color\r\n                }\r\n            });\r\n            this.setState({ width: this.props.width, height: this.props.height });\r\n            this.props.setPixels(newPixels);\r\n        }\r\n    }\r\n\r\n    createCanva = () => {\r\n        return this.props.pixels.map((pixel) => {       \r\n            return (\r\n                <Pixel \r\n                    key={pixel.key} \r\n                    id={pixel.key} \r\n                    style={{backgroundColor: pixel.color}}\r\n                    onPixelClick={this.onChangeColor}\r\n                />\r\n            )\r\n        });        \r\n    }\r\n    \r\n    onChangeColor = (pixelRef) => {\r\n        const index = indexOfPixel(pixelRef.current.id, this.props.width);\r\n        const newPixels = this.props.pixels.map((pixel, i) => {\r\n            if (i === index) {\r\n                return { color: this.props.selectedColor, key: pixel.key };\r\n            }\r\n            return pixel;\r\n        })\r\n        this.props.setPixels(newPixels);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='canva-conteiner'>\r\n                <div \r\n                    className=\"canva grid\"\r\n                    id=\"canva\"\r\n                    style={{gridTemplateColumns: `repeat(${this.props.width}, 15px)`}}\r\n                >\r\n                    {this.createCanva()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        width: state.size.width,\r\n        height: state.size.height,\r\n        pixels: state.pixels,\r\n        selectedColor: state.selectedColor\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setPixels })(Canva);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from './Button';\r\nimport Display from './Display';\r\nimport { BaseURLFacebook, sendArt, checkIfPaid } from '../api/database';\r\n\r\nimport '../styles/shareArt.css';\r\n\r\nclass ShareArt extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.idAreaRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        id: \"\",\r\n        isPaid: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.saveToDatabase();\r\n    }\r\n\r\n    saveToDatabase = async () => {\r\n        let pixelsToSend = [];\r\n        for (const pixel of this.props.pixels) {\r\n            pixelsToSend.push(pixel.color);\r\n        }\r\n        const response = await sendArt(pixelsToSend, this.props.width);\r\n        this.setState({ id: response.data._id });\r\n        this.checkIfPaid();\r\n    }\r\n    \r\n    checkIfPaid = async () => {\r\n        if ( !this.state.isPaid ) {\r\n            var checking = setInterval(async () => {\r\n                let res = await checkIfPaid(this.state.id);\r\n                console.log(res);\r\n                if ( res === true ) {\r\n                    this.setState({ isPaid: true });\r\n                    clearInterval(checking);\r\n                }\r\n            }, 60000);\r\n        };\r\n    }\r\n\r\n    copyId = () => {\r\n        this.idAreaRef.current.select();\r\n        document.execCommand('copy');\r\n    }\r\n    \r\n    openPortal = async () => {\r\n        const win = window.open('https://www.siepomaga.pl/skarbonki/pixelart/koszyk/dodaj');\r\n        win.focus();\r\n    }\r\n\r\n    facebookAvailable() {\r\n        return (\r\n            <iframe \r\n                src={`https://www.facebook.com/plugins/share_button.php?href=https%3A%2F%2F${BaseURLFacebook}/${this.state.id}&layout=button&size=large&width=77&height=28&appId`}\r\n                title=\"facebook-share-button\"\r\n                width=\"107\" \r\n                height=\"28\" \r\n                style={{border:'none', overflow:'hidden'}} scrolling=\"no\" \r\n                frameBorder=\"0\"\r\n                allow=\"encrypted-media\">\r\n            </iframe>\r\n        )\r\n    }\r\n\r\n    textDisplay() {\r\n        return (\r\n            <div className=\"summary\">\r\n                <p>\r\n                    Aby udostępnić swój pixelart na facebooku zapłać cokolwiek na skarbonkę Sandry.\r\n                    W polu słowa wsparcia wpisz:\r\n                </p>\r\n                <input \r\n                    ref={this.idAreaRef}\r\n                    type=\"text\"\r\n                    value={this.state.id}\r\n                    readOnly=\"readOnly\" />\r\n                <Button onButtonClick={this.copyId} text=\"Skopiuj ID\" /> \r\n                <Button onButtonClick={this.openPortal} text=\"wpłać\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    whatToDisplay() {\r\n        return (this.state.isPaid) ? this.facebookAvailable() : this.textDisplay();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"share-art\">\r\n                <Display pixels={this.props.pixels} width={this.props.width} height={this.props.height} />\r\n                {this.whatToDisplay()}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        width: state.size.width,\r\n        height: state.size.height,\r\n        pixels: state.pixels\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShareArt);","import React from 'react';\r\n\r\nimport SelectSize from './SelectSize';\r\nimport SelectColor from './SelectColor';\r\nimport Canva from './Canva';\r\nimport Button from './Button';\r\nimport ShareArt from './ShareArt';\r\n\r\nimport '../styles/createArt.css'\r\n\r\n\r\nclass  CreateArt extends React.Component {\r\n    state = {\r\n        result: false\r\n    };\r\n\r\n    onResult = () => {\r\n        this.setState({ result: !this.state.result })\r\n    }\r\n\r\n    content = () => {\r\n        if (this.state.result) {\r\n            return <ShareArt />\r\n        } else {\r\n            return (\r\n                <div className=\"create-art\">\r\n                    <div className=\"grid\">\r\n                        <SelectSize />\r\n                        <SelectColor />\r\n                    </div>\r\n                    <div>\r\n                        <Canva />\r\n                    </div>\r\n                    <Button onButtonClick={this.onResult} text=\"zapisz\"/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"create-art\">\r\n                {this.content()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateArt;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\n\r\nimport HeaderBar from './HeaderBar';\r\nimport FooterBar from './FooterBar';\r\nimport Result from './Result';\r\nimport CreateArt from './CreateArt';\r\n\r\nimport '../styles/styles.css';\r\nimport '../styles/app.css';\r\n\r\nclass App extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"app-conteiner grid\">\r\n                        <HeaderBar />\r\n                        <div className=\"content-conteiner\">\r\n                            <Switch>\r\n                                <Route path=\"/:id\" component={Result} />\r\n                                <Route path=\"/\" component={CreateArt} />\r\n                            </Switch>\r\n                        </div>\r\n                        <FooterBar />\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import { combineReducers } from \"redux\";\r\n\r\nimport { createWhiteBoard } from '../helpers/key';\r\n\r\n\r\nconst selectedColorReducer = (selectedColor = \"red\", action) => {\r\n    switch (action.type) {\r\n        case \"SELECTED_COLOR\":\r\n            return action.payload;\r\n        default:\r\n            return selectedColor;\r\n    }\r\n}\r\n\r\nconst sizeReducer = (size = { width: 10, height: 10 }, action) => {\r\n    switch (action.type) {\r\n        case (\"SELECT_SIZE\"):\r\n            return action.payload;\r\n        default:\r\n            return size;\r\n    }\r\n}\r\n\r\nconst pixelsReducer = (pixels = createWhiteBoard(10, 10), action) => {\r\n    switch (action.type) {\r\n        case (\"PIXELS\"):\r\n            return action.payload;\r\n        default:\r\n            return pixels;\r\n    }\r\n}\r\n\r\n\r\nexport default combineReducers({\r\n    selectedColor: selectedColorReducer,\r\n    size: sizeReducer,\r\n    pixels: pixelsReducer,\r\n});","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers);\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root'));"],"sourceRoot":""}